<?php
	class Biblioteca_Business_DataMapper_ItemEmprestimo
	{
		protected $_dbTable;
		
		public function __construct()
		{
			$this->setDbTable(new Biblioteca_Business_DbTable_ItemEmprestimo());
		}
		
		private function setDbTable(Biblioteca_Business_DbTable_ItemEmprestimo $dbtable)
		{
			$this->_dbTable = $dbtable;
		}
		
		private function getDbTable()
		{
			return $this->_dbTable;
		}
		
		public function add($emprestimo_id, $data_prevista, $livro_isbn)
		{
			$data = array(
					'emprestimo_id' => $emprestimo_id,
					'data_prevista' => $data_prevista,
					'livro_isbn' => $livro_isbn,
					'valor_pago' => 0
			);
			$this->getDbTable()->insert($data);
		}
		
		public function devolucao($id, $data_devolvida, $valor_pago)
		{
			$data = array(
					'data_devolvida' => $data_devolvida,
					'valor_pago' => (float) $valor_pago
			);
			$this->getDbTable()->update($data, 'id = ' . (int) $id);
		}
		
		public function delete($id)
		{
			$this->getDbTable()->delete('id = ' . (int) $id);
		}
		
		public function get($id, $array = false)
		{
			$row = $this->getDbTable()->fetchRow('id = ' . (int) $id);
			if ($row)
			{
				$emprestimo = $row->findParentRow('Biblioteca_Business_DbTable_Emprestimo');
				$membro = $emprestimo->findParentRow('Biblioteca_Business_DbTable_Membro')->toArray();
				$emprestimo = $emprestimo->toArray();
				
				$livro = $row->findParentRow('Biblioteca_Business_DbTable_Livro')->toArray();
				
				$data = $row->toArray();
				if ($array)
				{
					return $data;
				}
				
				$livro_model = new Biblioteca_Business_Model_Livro();
				$livro_model->setIsbn($livro['isbn'])
								->setTitulo($livro['titulo']);
				
				$membro_model = new Biblioteca_Business_Model_Membro();
				$membro_model->setId($membro['id'])
								->setNome($membro['nome'])
								->setEndereco($membro['endereco'])
								->setTelefone($membro['telefone']);
				
				$emprestimo_model = new Biblioteca_Business_Model_Emprestimo();
				$emprestimo_model->setId($emprestimo['id'])
									->setDataEmprestimo($emprestimo['data_emprestimo'])
									->setValorJuros($emprestimo['valor_juros'])
									->setMembro($membro_model);
				
				$model = new Biblioteca_Business_Model_ItemEmprestimo();
				$model->setId($data['id'])
						->setDataDevolvida($data['data_devolvida'])
						->setDataPrevista($data['data_prevista'])
						->setEmprestimo($emprestimo_model)
						->setLivro($livro_model)
						->setValorPago($data['valor_pago']);
				
				return $model;
			}
			return false;
		}
		
		public function getByIsbn($isbn)
		{
			$row = $this->getDbTable()->fetchRow("livro_isbn = '$isbn'");
			if ($row)
			{
				$model = new Biblioteca_Business_Model_ItemEmprestimo();
				$model->setId($row->id)
						->setDataDevolvida($row->data_devolvida)
						->setDataPrevista($row->data_prevista)
						->setValorPago($row->valor_pago);
				
				return $model;
			}
			return false;
		}
		
		public function listAll($emprestimo_id)
		{
			$rs = $this->getDbTable()->fetchAll('emprestimo_id = ' . (int) $emprestimo_id);
			$entries = array();
			foreach ($rs as $row)
			{
				$model = new Biblioteca_Business_Model_ItemEmprestimo();
				
				$livro = $row->findParentRow('Biblioteca_Business_DbTable_Livro');
				$livro_model = new Biblioteca_Business_Model_Livro();
				$livro_model->setIsbn($livro->isbn)
								->setTitulo($livro->titulo);
				
				$model->setId($row->id)
						->setLivro($livro_model)
						->setDataPrevista($row->data_prevista)
						->setDataDevolvida($row->data_devolvida)
						->setValorPago($row->valor_pago);
				$entries[] = $model;
			}
			return $entries;
		}
		
		public function listSelect()
		{
			$rs = $this->getDbTable()->fetchAll()->toArray();
			return $rs;
		}
	}